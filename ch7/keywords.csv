and,alternative operators: as an alternative for && (Logical AND operator)
and_eq,alternative operators: as an alternative for &=
asm,Declaration of an inline assembly block
auto,auto placeholder type specifier
bitand,alternative operators: as an alternative for &
bitor,alternative operators: as an alternative for |
bool,type, capable of holding one of the two values: true or false.
break,Causes the enclosing for, range-for, while or do-while loop or switch statement to terminate.
char,type for character representation which can be most efficiently processed on the target system
class,user defined type with private members by default
compl,alternative operators: as an alternative for ~
concept,declares a named type requirement
const,defines that the type is constant.
consteval,specifies that a function is an immediate function, that is, every call to the function must produce a compile-time constant
constexpr,specifies that the value of a variable or function can appear in constant expressions
constinit,asserts that a variable has static initialization, i.e. zero initialization and constant initialization, otherwise the program is ill-formed
const_cast,Converts between types with different cv-qualification.
continue,Causes the remaining portion of the enclosing for, range-for, while or do-while loop body to be skipped.
co_await,suspends a coroutine and returns control to the caller.
co_return,return statement in a coroutine
co_yield,yields a value from a coroutine
default,as the declaration of the catch all case label in a switch statement; as an explicit instruction to the compiler to generate special member function or a comparison operator for a class.
delete,Destroys object(s) previously allocated by the new expression and releases obtained memory area
double,floating point type matching IEEE-754 binary64 format if supported.
dynamic_cast,Safely converts pointers and references to classes up, down, and sideways along the inheritance hierarchy.
else,if statement, as the declaration of the alternative branch
enum,a distinct type whose value is restricted to a range of values, which may include several explicitly named constants
explicit,Specifies that a constructor or conversion function or deduction guide is explicit, that is, it cannot be used for implicit conversions and copy-initialization.
export,Marks a declaration, a group of declarations, or another module as exported by the current module.
extern,language linkage specification
false,boolean literal, not true
float,single precision floating-point type matching IEEE-754 binary32 format if supported.
for,Executes init-statement once, then executes statement and iteration-expression repeatedly, until the value of condition becomes false. The test takes place before each iteration.
friend,declaration appears in a class body and grants a function or another class access to private and protected members of the class
goto,considered harmful
if,Conditionally executes another statement.
int,basic integer type
long,Modifies the basic integer type;  target type will have width of at least 32 bits.
mutable,permits modification of the specified class member even if the containing object is declared const.
namespace,provide a method for preventing name conflicts in large projects
new,Creates and initializes objects with dynamic storage duration, that is, objects whose lifetime is not necessarily limited by the scope in which they were created.
noexcept,Specifies whether a function could throw exceptions.
not,alternative operators: as an alternative for !
not_eq,alternative operators: as an alternative for !=
or,alternative operators: as an alternative for ||
or_eq,alternative operators: as an alternative for |=
reinterpret_cast,Converts between types by reinterpreting the underlying bit pattern.
requires,specifies an associated constraint in template deduction
return,Terminates the current function and returns the specified value (if any) to the caller.
short,interger type optimized for space and will have width of at least 16 bits.
sizeof,Queries size of the object or type.
static,declarations of class members not bound to specific instances
static_assert,Performs compile-time assertion checking.
static_cast,Converts between types using a combination of implicit and user-defined conversions.
struct,user defined type with public members by default
switch,Transfers control to one of several statements, depending on the value of a condition.
template,a family of classes or functions parameterized by one or more parameters
this,is a prvalue expression whose value is the address of the implicit object parameter
thread_local,thread storage duration
true,boolean literal, not false
typedef,creates an alias that can be used anywhere in place of a (possibly complex) type name.
typeid,Queries information of a type. Used where the dynamic type of a polymorphic object must be known and for static type identification.
typename,In the template parameter list of a template declaration, can be used as an alternative to class to declare type template parameters and template template parameters 
union,a special class type that can hold only one of its non-static data members at a time.
using,Introduces a name that is defined elsewhere into the declarative region where this declaration appears.
virtual,specifies that a non-static member function is supports dynamic dispatch
void,parameter list of a function with no parameters
while,used to control the flow of execution. First, it checks the condition, if condition matches, statements the following while will be executed.
xor,alternative operators: as an alternative for ^
xor_eq,alternative operators: as an alternative for ^=
